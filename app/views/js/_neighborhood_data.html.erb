<script type="text/javascript" charset="utf-8">
	function initialize() {
	
	// set up default map options
		var myLatLng = new google.maps.LatLng(37.840707, -122.251661);
		var myOptions = {
	    	zoom: 15,
	
			<%= if request.user_agent.include?("iPhone") then 
			'draggable: false,'
			end %>
		    center: myLatLng,
		    mapTypeId: google.maps.MapTypeId.ROADMAP,
			mapTypeControl: false,
			mapTypeControlOptions: {style: google.maps.MapTypeControlStyle.DROPDOWN_MENU},
			navigationControl: true,
			navigationControlOptions: {
				style: google.maps.NavigationControlStyle.ZOOM_PAN,
		        position: google.maps.ControlPosition.TOP_RIGHT
			}  			
		};

	// build map
	   var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);
	
	// set up hoods
	// declare which hoods to map
	<% ["Rockridge","Shafter","Temescal"].each do |hood| %>
		
		// build points for one set of the hoods
		<% latLonArray = [] %>
		<% Neighborhood.find_by_name(hood).polygon_points.each do |point| %>
			<% latLonArray << "new google.maps.LatLng(#{point.latitude}, #{point.longitude})" %>
		<% end %> 

		// build the polygon for one hood
		GT.hoods["<%=hood%>"] = new google.maps.Polygon({
		     paths: [<%= latLonArray.join(", ")%>],
		     strokeColor: "#FF0000",
		     strokeOpacity: 0.8,
		     strokeWeight: 2,
		     fillColor: "#8fe97d",
		     fillOpacity: 0.15
		})
		GT.hoods["<%=hood%>"].setMap(map);
		
		// on mouseover, highlight neighborhood
		google.maps.event.addListener(GT.hoods["<%=hood%>"], 'mouseover', function(){
			GT.hoods["<%=hood%>"].setOptions({fillColor:"yellow"})
		})
		// on mouseout, unhighlight neighborhood
		google.maps.event.addListener(GT.hoods["<%=hood%>"], 'mouseout', function(){
			GT.hoods["<%=hood%>"].setOptions({fillColor:"#8fe97d"})
		})

	<% end %>

	
	// mark nearest users in the area
		geocoder = new google.maps.Geocoder();		// user the Geocoder service to convert address to lat lon
		var image = '/images/leaf.png';			// set custom image for markers
		var mapLocation = function (street, city, state) {
		    if (geocoder) {
		      geocoder.geocode( { 'address': street+', '+city+', '+state}, function(results, status) {
		        if (status == google.maps.GeocoderStatus.OK) {
		          var marker = new google.maps.Marker({
		              map: map, 
		              position: results[0].geometry.location,
					  icon:image
		          });
				// on mouseclick, show stats of neighborhood
				google.maps.event.addListener(marker, 'click', function(){alert(street+city+state)})
		        } else {
		          // alert("Geocode was not successful for the following reason: " + status);
		        }
		      });
		    }
		}
		<% User.all.collect{|x| x.address}.each do |address| %>
			mapLocation("<%= address.street_address%>", "<%= address.city%>", "<%= address.state %>");
		<% end %>

	
	// add test point

}
var togglePanel = function () {
	$('#panel').animate({width:'toggle'},300)
	$('#panelbar').animate({width:'toggle'},300)
}
$('#open, #close').click(togglePanel)

var setMapSize = function () {
	var bodyHeight = $('body').height();
	$('#map_canvas, #panel').height( bodyHeight - 199)	
	$('#content .bd').height( bodyHeight - 174)
	$('#content .bd, #map_canvas').width( ($('body').width() - 48) )	
}
$(window).resize(function() {
	setMapSize();
});
setMapSize();

</script>